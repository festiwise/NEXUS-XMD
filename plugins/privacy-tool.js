constfs=require("fs");constconfig=require("../config");const{cmd,commands}=require("../command");constpath=require('path');constaxios=require("axios");cmd({pattern:"privacy",alias:["privacymenu"],desc:"Privacysettingsmenu",category:"privacy",react:"🔐",filename:__filename},async(conn,mek,m,{from,quoted,body,isCmd,command,args,q,isGroup,sender,senderNumber,botNumber2,botNumber,pushname,isMe,isOwner,groupMetadata,groupName,participants,groupAdmins,isBotAdmins,isAdmins,reply})=>{try{letprivacyMenu=`╭━━〔*PrivacySettings*〕━━┈⊷┃◈╭─────────────·๏┃◈┃•blocklist-Viewblockedusers┃◈┃•getbio-Getuser'sbio┃◈┃•setppall-Setprofilepicprivacy┃◈┃•setonline-Setonlineprivacy┃◈┃•setpp-Changebot'sprofilepic┃◈┃•setmyname-Changebot'sname┃◈┃•updatebio-Changebot'sbio┃◈┃•groupsprivacy-Setgroupaddprivacy┃◈┃•getprivacy-Viewcurrentprivacysettings┃◈┃•getpp-Getuser'sprofilepicture┃◈┃┃◈┃*Optionsforprivacycommands:*┃◈┃•all-Everyone┃◈┃•contacts-Mycontactsonly┃◈┃•contact_blacklist-Contactsexceptblocked┃◈┃•none-Nobody┃◈┃•match_last_seen-Matchlastseen┃◈└───────────┈⊷╰──────────────┈⊷*Note:*Mostcommandsareowner-only`;awaitconn.sendMessage(from,{image:{url:`https://files.catbox.moe/ug8w1x.jpg`},//Replacewithprivacy-themedimageifavailablecaption:privacyMenu,contextInfo:{mentionedJid:[m.sender],forwardingScore:999,isForwarded:true,forwardedNewsletterMessageInfo:{newsletterJid:'120363288304618280@newsletter',newsletterName:"PrivacySettings",serverMessageId:143}}},{quoted:mek});}catch(e){console.log(e);reply(`Error:${e.message}`);}});cmd({pattern:"blocklist",desc:"Viewthelistofblockedusers.",category:"privacy",react:"📋",filename:__filename},async(conn,mek,m,{from,isOwner,reply})=>{if(!isOwner)returnreply("*📛Youarenottheowner!*");try{//FetchtheblocklistconstblockedUsers=awaitconn.fetchBlocklist();if(blockedUsers.length===0){returnreply("📋Yourblocklistisempty.");}//Formattheblockeduserswith📌andcountthetotalconstlist=blockedUsers.map((user,i)=>`🚧BLOCKED${user.split('@')[0]}`)//Removedomainandadd📌.join('\n');constcount=blockedUsers.length;reply(`📋BlockedUsers(${count}):\n\n${list}`);}catch(err){console.error(err);reply(`❌Failedtofetchblocklist:${err.message}`);}});cmd({pattern:"getbio",desc:"Displaystheuser'sbio.",category:"privacy",filename:__filename,},async(conn,mek,m,{args,reply})=>{try{constjid=args[0]||mek.key.remoteJid;constabout=awaitconn.fetchStatus?.(jid);if(!about)returnreply("Nobiofound.");returnreply(`UserBio:\n\n${about.status}`);}catch(error){console.error("Errorinbiocommand:",error);reply("Nobiofound.");}});cmd({pattern:"setppall",desc:"UpdateProfilePicturePrivacy",category:"privacy",react:"🔐",filename:__filename},async(conn,mek,m,{from,l,quoted,body,isCmd,command,args,q,isGroup,sender,senderNumber,botNumber2,botNumber,pushname,isMe,isOwner,groupMetadata,groupName,participants,groupAdmins,isBotAdmins,isAdmins,reply})=>{if(!isOwner)returnreply("❌Youarenottheowner!");try{constvalue=args[0]||'all';constvalidValues=['all','contacts','contact_blacklist','none'];if(!validValues.includes(value)){returnreply("❌Invalidoption.Validoptionsare:'all','contacts','contact_blacklist','none'.");}awaitconn.updateProfilePicturePrivacy(value);reply(`✅Profilepictureprivacyupdatedto:${value}`);}catch(e){returnreply(`*Anerroroccurredwhileprocessingyourrequest.*\n\n_Error:_${e.message}`);}});cmd({pattern:"setonline",desc:"UpdateOnlinePrivacy",category:"privacy",react:"🔐",filename:__filename},async(conn,mek,m,{from,l,quoted,body,isCmd,command,args,q,isGroup,sender,senderNumber,botNumber2,botNumber,pushname,isMe,isOwner,groupMetadata,groupName,participants,groupAdmins,isBotAdmins,isAdmins,reply})=>{if(!isOwner)returnreply("❌Youarenottheowner!");try{constvalue=args[0]||'all';constvalidValues=['all','match_last_seen'];if(!validValues.includes(value)){returnreply("❌Invalidoption.Validoptionsare:'all','match_last_seen'.");}awaitconn.updateOnlinePrivacy(value);reply(`✅Onlineprivacyupdatedto:${value}`);}catch(e){returnreply(`*Anerroroccurredwhileprocessingyourrequest.*\n\n_Error:_${e.message}`);}});cmd({pattern:"setpp",desc:"Setbotprofilepicture.",category:"privacy",react:"🖼️",filename:__filename},async(conn,mek,m,{from,isOwner,quoted,reply})=>{if(!isOwner)returnreply("❌Youarenottheowner!");if(!quoted||!quoted.message.imageMessage)returnreply("❌Pleasereplytoanimage.");try{conststream=awaitdownloadContentFromMessage(quoted.message.imageMessage,'image');letbuffer=Buffer.from([]);forawait(constchunkofstream){buffer=Buffer.concat([buffer,chunk]);}constmediaPath=path.join(__dirname,`${Date.now()}.jpg`);fs.writeFileSync(mediaPath,buffer);//Updateprofilepicturewiththesavedfileawaitconn.updateProfilePicture(conn.user.jid,{url:`file://${mediaPath}`});reply("🖼️Profilepictureupdatedsuccessfully!");}catch(error){console.error("Errorupdatingprofilepicture:",error);reply(`❌Errorupdatingprofilepicture:${error.message}`);}});cmd({pattern:"setmyname",desc:"SetyourWhatsAppdisplayname.",category:"privacy",react:"⚙️",filename:__filename},async(conn,mek,m,{from,isOwner,reply,args})=>{if(!isOwner)returnreply("❌Youarenottheowner!");//EnsureyouhavethedisplaynameargumentconstdisplayName=args.join("");if(!displayName)returnreply("❌Pleaseprovideadisplayname.");try{//Ensurethesessionisloadedbeforetryingtoupdateconst{state,saveCreds}=awaituseMultiFileAuthState('path/to/auth/folder');constconn=makeWASocket({auth:state,printQRInTerminal:true,});conn.ev.on('creds.update',saveCreds);//Updatedisplaynameafterconnectionawaitconn.updateProfileName(displayName);reply(`✅Yourdisplaynamehasbeensetto:${displayName}`);}catch(err){console.error(err);reply("❌Failedtosetyourdisplayname.");}});cmd({pattern:"updatebio",react:"🥏",desc:"ChangetheBotnumberBio.",category:"privacy",use:'.updatebio',filename:__filename},async(conn,mek,m,{from,l,quoted,body,isCmd,command,args,q,isGroup,sender,senderNumber,botNumber2,botNumber,pushname,isMe,isOwner,groupMetadata,groupName,participants,groupAdmins,isBotAdmins,isAdmins,reply})=>{try{if(!isOwner)returnreply('🚫*YoumustbeanOwnertousethiscommand*');if(!q)returnreply('❓*EntertheNewBio*');if(q.length>139)returnreply('❗*Sorry!Characterlimitexceeded*');awaitconn.updateProfileStatus(q);awaitconn.sendMessage(from,{text:"✔️*NewBioAddedSuccessfully*"},{quoted:mek});}catch(e){reply('🚫*Anerroroccurred!*\n\n'+e);l(e);}});cmd({pattern:"groupsprivacy",desc:"UpdateGroupAddPrivacy",category:"privacy",react:"🔐",filename:__filename},async(conn,mek,m,{from,l,quoted,body,isCmd,command,args,q,isGroup,sender,senderNumber,botNumber2,botNumber,pushname,isMe,isOwner,groupMetadata,groupName,participants,groupAdmins,isBotAdmins,isAdmins,reply})=>{if(!isOwner)returnreply("❌Youarenottheowner!");try{constvalue=args[0]||'all';constvalidValues=['all','contacts','contact_blacklist','none'];if(!validValues.includes(value)){returnreply("❌Invalidoption.Validoptionsare:'all','contacts','contact_blacklist','none'.");}awaitconn.updateGroupsAddPrivacy(value);reply(`✅Groupaddprivacyupdatedto:${value}`);}catch(e){returnreply(`*Anerroroccurredwhileprocessingyourrequest.*\n\n_Error:_${e.message}`);}});cmd({pattern:"getprivacy",desc:"GetthebotNumberPrivacySettingUpdates.",category:"privacy",use:'.getprivacy',filename:__filename},async(conn,mek,m,{from,l,quoted,body,isCmd,command,args,q,isGroup,sender,senderNumber,botNumber2,botNumber,pushname,isMe,isOwner,groupMetadata,groupName,participants,groupAdmins,isBotAdmins,isAdmins,reply})=>{try{if(!isOwner)returnreply('🚫*YoumustbeanOwnertousethiscommand*');constduka=awaitconn.fetchPrivacySettings?.(true);if(!duka)returnreply('🚫*Failedtofetchprivacysettings*');letpuka=`╭───「𝙿𝚁𝙸𝚅𝙰𝙲𝚈」───◆│∘𝚁𝚎𝚊𝚍𝚁𝚎𝚌𝚎𝚒𝚙𝚝:${duka.readreceipts}│∘𝙿𝚛𝚘𝚏𝚒𝚕𝚎𝙿𝚒𝚌𝚝𝚞𝚛𝚎:${duka.profile}│∘𝚂𝚝𝚊𝚝𝚞𝚜:${duka.status}│∘𝙾𝚗𝚕𝚒𝚗𝚎:${duka.online}│∘𝙻𝚊𝚜𝚝𝚂𝚎𝚎𝚗:${duka.last}│∘𝙶𝚛𝚘𝚞𝚙𝙿𝚛𝚒𝚟𝚊𝚌𝚢:${duka.groupadd}│∘𝙲𝚊𝚕𝚕𝙿𝚛𝚒𝚟𝚊𝚌𝚢:${duka.calladd}╰────────────────────`;awaitconn.sendMessage(from,{text:puka},{quoted:mek});}catch(e){reply('🚫*Anerroroccurred!*\n\n'+e);l(e);}});cmd({pattern:"getpp",desc:"Fetchtheprofilepictureofataggedorreplieduser.",category:"owner",filename:__filename},async(conn,mek,m,{quoted,isGroup,sender,participants,reply})=>{try{//DeterminethetargetuserconsttargetJid=quoted?quoted.sender:sender;if(!targetJid)returnreply("⚠️Pleasereplytoamessagetofetchtheprofilepicture.");//Fetchtheuser'sprofilepictureURLconstuserPicUrl=awaitconn.profilePictureUrl(targetJid,"image").catch(()=>null);if(!userPicUrl)returnreply("⚠️Noprofilepicturefoundforthespecifieduser.");//Sendtheuser'sprofilepictureawaitconn.sendMessage(m.chat,{image:{url:userPicUrl},caption:"🖼️Hereistheprofilepictureofthespecifieduser."});}catch(e){console.error("Errorfetchinguserprofilepicture:",e);reply("❌Anerroroccurredwhilefetchingtheprofilepicture.Pleasetryagainlater.");}});