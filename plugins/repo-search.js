constaxios=require("axios");const{cmd}=require("../command");cmd({pattern:"srepo",desc:"FetchinformationaboutaGitHubrepository.",category:"other",react:"🍃",filename:__filename},async(conn,m,store,{from,args,reply})=>{try{constrepoName=args.join("");if(!repoName){returnreply("❌PleaseprovideaGitHubrepositoryintheformat📌`owner/repo`.");}constapiUrl=`https://api.github.com/repos/${repoName}`;const{data}=awaitaxios.get(apiUrl);letresponseMsg=`📁*GitHubRepositoryInfo*📁\n\n`;responseMsg+=`📌*Name*:${data.name}\n`;responseMsg+=`🔗*URL*:${data.html_url}\n`;responseMsg+=`📝*Description*:${data.description||"Nodescription"}\n`;responseMsg+=`⭐*Stars*:${data.stargazers_count}\n`;responseMsg+=`🍴*Forks*:${data.forks_count}\n`;responseMsg+=`👤*Owner*:${data.owner.login}\n`;responseMsg+=`📅*CreatedAt*:${newDate(data.created_at).toLocaleDateString()}\n`;responseMsg+=`\n>*©PoweredbyPkdriller*`;awaitconn.sendMessage(from,{text:responseMsg},{quoted:m});}catch(error){console.error("GitHubAPIError:",error);reply(`❌Errorfetchingrepositorydata:${error.response?.data?.message||error.message}`);}});